{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"","slug":"数据结构笔记","date":"2021-09-14T09:11:21.433Z","updated":"2021-09-14T09:20:53.107Z","comments":true,"path":"2021/09/14/数据结构笔记/","link":"","permalink":"http://example.com/2021/09/14/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0/","excerpt":"","text":"数据结构笔记","categories":[],"tags":[]},{"title":"","slug":"计算机网络笔记","date":"2021-09-14T09:11:07.569Z","updated":"2021-09-14T09:19:18.688Z","comments":true,"path":"2021/09/14/计算机网络笔记/","link":"","permalink":"http://example.com/2021/09/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B0/","excerpt":"","text":"计算机网络期末复习笔记第一章1.计算机之间的通信是通过进程实现的客户服务器方式C/S对等方式P2P 2.路由器实现分组交换工作（电路、分组、报文) 3.路由器将收到的分组存入缓存—查找转发表—将数据分组经由适当的端口转发出去 4.主机是为用户进行数据处理的，发送并接受数据分组，而路由器起到的作用是分组转发的作用分组交 换的有点:高效灵活迅速可靠 5.跳数:从源端到目的端数据纷纷经由的路由器的个数广域网、城域网、局域网、个人区域网 公用网、专用网 6.广域网—城域网一接入网—局域网 7.计算机网络性能指标:比特、带宽(数字信道能传输的最高的数据流率，单位: bit/s)吞吐量、时延传送 8.时延=数据块长度/信道宽度 9.传播时延=信道长度/信号在信道上的传输速率处理时延、排队时延(取决于吞吐量) 10.总时延=传输时延+传播时延+处理时延+排队时延时延带宽=传播时延*带宽 11.利用率:信道利用率并非越高越好OSI/RM失败、TCP/IP 12.网络协议组成要素:语法、语义、同步 13.分层的好处:各层是独立的、灵活性好、结构上便于分割、方便实现和维护、促进标准化0SI:应用 层、表示层、会话层、运输层、网络层、数据链路层、物理层 14.TCP/IP:应用层、运输层、网际层IP、网络接口层、 15.五层协议体系:应用层、运输层、网络层、数据链路层、物理层 第二章","categories":[],"tags":[]},{"title":"","slug":"javaweb笔记","date":"2021-09-14T09:10:50.091Z","updated":"2021-09-25T09:22:22.289Z","comments":true,"path":"2021/09/14/javaweb笔记/","link":"","permalink":"http://example.com/2021/09/14/javaweb%E7%AC%94%E8%AE%B0/","excerpt":"","text":"JAVAWEB 学习记录基本快捷键ctrl+shift+alt：多行操作psvm：生成main()方法；fori：生成for循环；Ctrl+Alt+v：自动补齐返回值类型ctrl+o：覆写方法ctrl+i：实现接口中的方法ctrl+shift+u：大小写转换CTRL+SHIFT+Z：取消撤销Alt＋Insert：生成构造方法、getter、setterctrl+y：删除当前行Ctrl+Shift+J：将选中的行合并成一行ctrl+g：定位到某一行Ctrl+Shitft+向下箭头：将光标所在的代码块向下整体移动Ctrl+Shift+向上箭头：将光标所在的代码块向上整体移动Alt+Shift+向下箭头：将行向下移动Alt+Shift+向上箭头：将行向上移动Ctrl+F：在当前文件中查找Ctrl+R：替换字符串Ctrl+Shift+F:在全局文件中查找字符串Ctrl+Shift+R：在全局中替换字符串Ctrl+Shift+Enter：自动补齐{}或者分号;Shift+Enter：在当前行的下方开始新行Ctrl+Alt+Enter：在当前行的上方插入新行Ctrl+Delete：删除光标所在至单词结尾处的所有字符 servlet部分servletcontext新建一个类,继承HttpServlet的父类12345678910111213package star;import javax.servlet.ServletContext;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;public class Getservlet extends HttpServlet &#123;//拿到数值 @Override &#125; doget,dopost方法使用servletcontext12345678910111213141516protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123; ServletContext context =this.getServletContext(); String username = &quot;***&quot;;//数据 context.setAttribute(&quot;username&quot;,username);//将一个数据保存在了servlet,名字为username，值username&#125;//web配置servlet （相当于给一个地址去拿到并且显示） &lt;servlet&gt; &lt;servlet-name&gt;hello&lt;/servlet-name&gt; &lt;servlet-class&gt;star.helloservlet&lt;/servlet-class&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;hello&lt;/servlet-name&gt; &lt;url-pattern&gt;/hello&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; ResponseResponse下载应用负责向浏览器发送数据的方法123servletOutputStream getOutputStream() throws IOException;PrintlWriter getWriter() throws IOException; 下载文件123456789101112131415161718192021//1.要获取下载文件的路径 String realPath = &quot;E:\\\\Test\\\\Httpservlet- response\\\\src\\\\main\\\\resources\\\\梦梦.jpg&quot;; System.out.println(&quot;下载文件的路径&quot;+realPath);//2.下载文件名是什么 String fileNmae = realPath.substring(realPath.lastIndexOf(&quot;\\\\&quot;)+1);//3.置想办法让浏览器能支持我们下载需要的东西 resp.setHeader(&quot;Content-Disposition&quot;,&quot;attachment;filename=&quot;+fileNmae);//4.获取下载文件的输入流 FileInputStream in = new FileInputStream(realPath);//5.创建缓冲区 int len = 0; byte[] buffer = new byte[1024];//6.获取OutputSteam对象 ServletOutputStream out = resp.getOutputStream();//7.将FileOutputStream流写入到BUFFER缓冲区 while ((len=in.read(buffer))&gt;0)&#123; out.write(buffer,0,len); &#125; in.close(); out.close();//8.使用OutputStream将缓冲区的数据输出到客户端 验证码实现1234567891011121314151617181920212223242526272829303132333435363738394041//如何让浏览器3秒自动刷新一次； resp.setHeader(&quot;refresh&quot;,&quot;3&quot;); //在内存中创建一个图片 BufferedImage image = new BufferedImage(80,80,BufferedImage.TYPE_INT_ARGB); //得到图片 Graphics2D g =(Graphics2D) image.getGraphics(); //设置图片的背景颜色 g.setColor(Color.pink); g.fillRect(0,0,80,80); //给图片数据 g.setColor(Color.BLUE); g.setFont(new Font(null,Font.BOLD,20)); g.drawString(makeNum(),0,20); //告诉浏览器，这个请求的方式打开图片 resp.setContentType(&quot;image/jpeg&quot;); //网站存在缓存，不让浏览器缓存 resp.setDateHeader(&quot;expires&quot;,-1); resp.setHeader(&quot;Cache- Control&quot;,&quot;no-cache&quot;); resp.setHeader(&quot;Pragma&quot;,&quot;no-cache&quot;); //把图片给浏览器 ImageIO.write(image,&quot;jpg&quot;,resp.getOutputStream());&#125;//生成随机数private String makeNum()&#123; Random random = new Random(); String num = random.nextInt(99999999)+&quot;&quot;; StringBuffer sb = new StringBuffer(); for (int i =1;i&lt;7-num.length();i++)&#123; sb.append(&quot;0&quot;); &#125; num = sb.toString() + num; return num;&#125; Response重定向补充说明：注解方法12@WebServlet( urlPatterns = &quot;/url&quot;) //urlPatternsk可以不写//省去了去WEB配置，直接可以拿到地址并且显示，现在大多使用注解完成 COOKIE会话会话：用户打开浏览器点了很多个超链接，关闭浏览器，访问WEB资源都可以算。 有状态会话：比如登记，证明，标记 保存会话的两种技术cookie:客户端技术（响应rsp，请求resp） seesion:服务器技术，保存会话信息的，比如浏览器的缓存 COOKIE应用请求cookie信息 服务器响应给客户端cookie 123456789101112131415//cookie服务器从客户端获取Cookie[] cookies = req.getCookies();//返回数组，COOKIE可能有多个cookie.getName();cookie.getValue();//新建一个COOKIECookie cookie = new Cookie(&quot;xingxing&quot;, System.currentTimeMillis()+&quot;&quot;);//设置COOKIE的有效期cookie.setMaxAge(24*60*60);//响应给客户端cookieresp.addCookie(cookie); COOKIE扩展1）一个cookie只能保存一个信息； 2）一个WEB站点可以给浏览器发送多个cookie，最多存放20个 3）cookie的限制大小只有4KB 4）300个cookie浏览器上限 sessionJSP部分JSP本身就是一个servlet123456789101112131415//初始化public viod _jspInit()&#123;&#125;//销毁public viod _jspDestroy()&#123;&#125;//JSPservicepublic viod _jspService()&#123;.HttpServletRequest request,HttpServletResponse response&#125; JSP原理只要是JAVA代码就会原封不动的输出 但是如果是HTML代码就会用 1out.write(&quot;&lt;html&gt;\\r\\n&quot;) 扩展123String IP = req.getRemoteAddr();//获取IP地址int DK = req.getRemotePort();//获取获取端口String QQ = req.getServletPath();//获取请求地址","categories":[],"tags":[]},{"title":"","slug":"Markdown语法","date":"2021-09-14T09:08:09.999Z","updated":"2021-09-14T09:19:56.197Z","comments":true,"path":"2021/09/14/Markdown语法/","link":"","permalink":"http://example.com/2021/09/14/Markdown%E8%AF%AD%E6%B3%95/","excerpt":"","text":"Markdown语法","categories":[],"tags":[]},{"title":"博客修改的基本设置","slug":"我的第一篇博客文章","date":"2021-09-13T06:51:56.000Z","updated":"2021-09-14T09:07:42.968Z","comments":true,"path":"2021/09/13/我的第一篇博客文章/","link":"","permalink":"http://example.com/2021/09/13/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/","excerpt":"","text":"##更改博客当忘了怎么设置的时候 ，点击：https://www.bilibili.com/video/BV1Yb411a7ty/?spm_id_from=333.788.recommend_more_video.-1 ##在本地部署服务器hexo s ##当部署出现问题（1）删除.deploy_git文件夹; （2）输入git config –global core.autocrlf false （3）依次执行： 12345hexo cleanhexo ghexo d","categories":[],"tags":[]}],"categories":[],"tags":[]}